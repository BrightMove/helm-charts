apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-deployment
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Release.Name }}-node
spec:
  replicas: {{ default 1 .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-node
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
      containers:
        - name: {{ .Release.Name }}-server
          image: 'brightmove/{{ .Chart.Name }}:{{ .Chart.Version }}'
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          env:
            - name: ENV
              value: "{{ .Values.env }}"
            - name: OTEL_EXPORTER_OTLP_PROTOCOL
              value: "{{ .Values.otelExporterOtlpProtocol }}"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "{{ .Values.otelExporterOtlpEndpoint }}"
            - name: OTEL_EXPORTER_OTLP_HEADERS
              value: "{{ .Values.otelExporterOtlpHeaders }}"
            - name: JAVA_OPTS
              value: >-
                -Dotel.logs.exporter=otlp
                -Dotel.semconv-stability.opt-in=http
                -Dotel.instrumentation.micrometer.base-time-unit=s
                -Dotel.service.name=tika-{{ .Values.env }}
                -Dotel.resource.attributes=deployment.environment={{ .Values.env }},service.namespace=tools,service.instance.id=${HOSTNAME}
                -Denv={{ .Values.env }}
          ports:
            - containerPort: 9998
              name: tika-port
          imagePullPolicy: Always
      imagePullSecrets:
        - name: regcred
      nodeSelector:
        role: general